import{H as u,p as d}from"./paginator-BvNNbeRL.js";const p=t=>({id:t.id,url:t.url,providerPublicId:t.providerPublicId,userId:t.userId,isActive:t.isActive,isLock:t.isLock,createdAt:t.createdAt,updatedAt:t.updatedAt}),G=t=>({id:t.id,url:t.url,isActive:t.isActive,createdAt:t.createdAt}),o="mediaFiles",y=()=>({GetAllMediaFiles:async(l,s)=>{const{limit:i=10,page:a=0}=s;return await u().then(async r=>await r[o].filter(e=>e.isLock===!1).filter(e=>e.isActive===!0).filter(e=>e.grafId===l).sort(function(e,n){return e.createdAt>n.createdAt?1:e.createdAt<n.createdAt?-1:0}).splice(a,i).map(e=>G(e)))},GetOneMediaFile:async l=>await u().then(async i=>{const a=await i[o].find(c=>c.id===l);return p(a)})}),v=t=>({id:t.id,text:t.text,userId:t.userId,isActive:t.isActive,isLock:t.isLock,createdAt:t.createdAt,updatedAt:t.updatedAt}),f=t=>({id:t.id,text:t.text,userId:t.userId,isActive:t.isActive,createdAt:t.createdAt}),A="grafs",I=()=>({GetAllGrafs:async s=>{const i=d(s.limit,s.page);return await await u().then(async c=>await c[A].filter(r=>r.isLock===!1).filter(r=>r.isActive===!0).sort(function(r,e){return r.createdAt<e.createdAt?1:r.createdAt>e.createdAt?-1:0}).splice(i.page,i.limit).map(r=>f(r)))},GetOneGraf:async s=>{const i=await u().then(async a=>await a[A].find(c=>c.id===s));return v(i)},SearchAllGrafs:async(s,i)=>{const a=d(i.limit,i.page);return await await u().then(async r=>await r[A].filter(e=>e.isLock===!1).filter(e=>e.isActive===!0).sort(function(e,n){return e.createdAt<n.createdAt?1:e.createdAt>n.createdAt?-1:0}).splice(a.page,a.limit).map(e=>f(e)))}});export{y as a,I as u};
